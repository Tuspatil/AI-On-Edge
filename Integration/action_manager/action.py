from flask import Flask ,jsonify,request
import json
from pymongo import MongoClient
import threading
from kafka import KafkaProducer
from kafka import KafkaConsumer
import time
import hashlib
import smtplib

registry_ip = 'localhost'
registry_port = 27017
sensor_client = 'demo2'
sensor_document = 'sensor'
kafka_platform_ip = 'localhost:9092'

app = Flask(__name__)
	

def send_data_to_sensor(host_topic,service_id):
	

	
	consumer = KafkaConsumer(str(service_id),group_id='action_module',bootstrap_servers=[kafka_platform_ip],auto_offset_reset = "latest")
	print("action manager reading from ",service_id)
	
	for message in consumer:
		s = message.value.decode('utf-8')
		print("msg on algo output ",s)
		s = s.split('>')
		msg = s[0]
		ip,topic = s[1].split(' ')
		producer = KafkaProducer(bootstrap_servers=[ip])
		producer.send(topic, bytes(msg,"utf-8"))    
		producer.flush()
		time.sleep(1)
		


def SendEmail(address,subject,text,serviceid):

	#read data from serviceinstance topic
	consumer = KafkaConsumer(str(service_id),group_id='action_module',bootstrap_servers=[kafka_platform_ip],auto_offset_reset = "latest")
	print("action manager reading from ",service_id)

	#any output generated by algorithm then send mail
	for msg in consumer:

		#incoming msg format classroom 1
		msg = msg.split(' ')
		classroom = msg[0]

    	s = smtplib.SMTP('smtp.gmail.com', 587) 
    	s.starttls() 

    	text = classroom + " " + text
    	message = 'Subject: {}\n\n{}'.format(subject, text)
	    s.login("pratiktiwari993@gmail.com", "jimmyjimmy") 
	    s.sendmail("pratiktiwari993@gmail.com", "pratiktiwari993@gmail.com", message) 
	    s.quit() 

	    print("Mail sent")

def getactionmodule(d,servicename):
	l = d['Application']['services'].keys()
	print(l)
	for i in l:
		if(d['Application']['services'][i]['servicename'] == servicename):
			d = d['Application']['services'][i]['action']
			break

	return d

@app.route('/actionmanager' ,methods=['GET' ,'POST'])
def fun():

	#get userid , config file as a request
	data = request.get_json()
	user_id = data['username']
	servicename = data['servicename']
	d = data['config_file']
	serviceid = data['serviceid']
	host_topic = data['sensor_host']

	print(servicename)
	d = getactionmodule(d,servicename)



	for i in d:
		
		if(i == 'send_data_to_sensor' and d[i]['value'] != "None"):
			
			#get sensor host topic
			client = MongoClient('localhost' ,27017)
			mydb = client[sensor_client]
			mycol = mydb[sensor_document]
			query = d[i]
			print(query)
			#pass it to thread
			# t = threading.Thread( target = send_data_to_sensor, args=(host_topic,serviceid,))
			# t.start()
		
		if(i == 'Output_display_to_user' and d[i] != "None"):
			t = threading.Thread( target = Output_display_to_user, args=(i['Output_display_to_user'],serviceid,))
			t.start()
		
		if(i == 'Send_Email' and d[i]['To'] != "None"):
			address = i['Send_Email']['To']
			subject = i['Send_Email']['Subject']
			text = "TP"
			t = threading.Thread( target = SendEmail, args=(address,subject,text,serviceid,))
			t.start()



	# send temp topic to deployer
	temp = {'ack': 'OK'}
	return temp

if __name__ == '__main__':
   app.run(debug=True,port=5080)